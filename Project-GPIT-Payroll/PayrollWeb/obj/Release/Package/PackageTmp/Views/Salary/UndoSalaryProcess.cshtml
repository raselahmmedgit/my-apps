@using System.Diagnostics.Eventing.Reader
@using PayrollWeb.Models
@using PayrollWeb.ViewModels
@model PayrollWeb.ViewModels.SalaryProcessModel

@{
    ViewBag.Title = "UndoSalaryProcess";
    Layout = "~/Views/Shared/_LayoutDetailsPage.cshtml";
}

@section PageBanner
{
    Rollback Bonus Process
}

<br style="clear: both;"/>
    @{
        if (TempData.ContainsKey("msg"))
        {
            var res = (OperationResult)TempData["msg"];
            if (res.IsSuccessful)
            {
                <div id="notifyUser" class="alert alert-success">
			    <button data-dismiss="alert" class="close" type="button">×</button>
			    <div>@res.Message </div>
                </div>    
            }
            else
            {
                <div id="notifyUser" class="alert alert-error">
			    <button data-dismiss="alert" class="close" type="button">×</button>
			    <div>@res.Message </div>
                </div> 
            }
        }
    }
<fieldset id="bd">
    @using (@Html.BeginForm("UndoSalaryProcess", "Salary", FormMethod.Post, new { @class = "form-inline" }))
    {
        <div class="row-fluid" style="margin: 10px;">
            <div class="span3">
                Select Process Year
            </div>
            <div class="span8">
                @Html.DropDownListFor(m => m.Year, new SelectList(@ViewBag.Years), "---Select Year---")
                @Html.ValidationMessageFor(m => m.Year)
            </div>
        </div>
        <div class="row-fluid"  style="margin: 10px;">
            <div class="span3">
                Select Process Month
            </div>
            <div class="span8">
                @Html.DropDownListFor(m => m.Month, new SelectList(@ViewBag.Months, "Value", "Key"), "---Select Month---") 
                 @Html.ValidationMessageFor(m => m.Month)
            </div>
        </div>
        <div class="row-fluid"  style="margin: 10px;">
            <div class="span3">For Employee</div>
            <div class="span8">
                <label class="radio">
                    @Html.RadioButton("empGroup", "all", true)
                    All
                </label>
                <label class="radio">
                    @Html.RadioButton("empGroup", "selected")
                    Selected Only
                </label>
            </div>
        </div>
        <div class="row-fluid"  style="margin: 10px;">
            <div class="span3">@Html.LabelFor(model => model.SalaryProcessDate)</div>
            <div class="span8">
                @Html.EditorFor(model => model.SalaryProcessDate)<br />
                @Html.ValidationMessageFor(model => model.SalaryProcessDate)
            </div>
        </div>
        <div class="row-fluid"  style="margin: 10px;">
            <div class="span3">@Html.LabelFor(model => model.SalaryPaymentDate)</div>
            <div class="span8">
                @Html.EditorFor(model => model.SalaryPaymentDate)<br />
                @Html.ValidationMessageFor(model => model.SalaryPaymentDate)
            </div>
        </div>
        <div class="row-fluid" style="margin-top: 10px;">
            @Html.HiddenFor(m => m.SelectedEmployeesOnly)
        </div>
        <div class="row-fluid"  style="margin: 10px;">
            <div class="span5"></div>
            <div class="span6">
                <i id="prel" style="display: none;"><img src="~/Content/pleasewait.gif"/></i>
                <button id="btnUndoProcess" type="button" class="btn btn-primary" onclick = "UndoSalaryProcess(this); return false;">Process</button>
            </div>
        </div>
        <br />
    }

</fieldset>

<div id="prcsSalary" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-body">
    <p>Are you sure you want to rollback salary?</p>
    </div>
    <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <button id="btnPrcsBonus" class="btn btn-primary">Rollback</button>
    </div>
</div>

<div id="mdlSelectEmp" class="modal hide fade">
    <div class="modal-body" >
        <table id="empSearch" cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Employee Id</th><th>Name</th><th>Department</th><th>Mobile</th>
                </tr>
            </thead>
        </table>   
    </div>
    <div class="modal-footer">
        <a href="#" class="btn close" data-dismiss="modal" aria-hidden="true">Complete</a>
        @*<a href="#" class="btn btn-primary">Save changes</a>*@
    </div>
</div>


@section PageSpecificJs
{
    <script type="text/javascript" charset="utf-8" src="~/Scripts/DataTables-1.9.4/media/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="~/Scripts/DataTables-1.9.4/extras/TableTools/media/js/ZeroClipboard.js"></script>
    <script type="text/javascript" charset="utf-8" src="~/Scripts/DataTables-1.9.4/extras/TableTools/media/js/TableTools.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="~/Scripts/DataTables-1.9.4/dataTables.bootstrap.js"></script>
    <style type="text/css">
        .row_selected {
            color: red;
        }
    </style>

    <script type="text/javascript">
        var oTable;
        var selected = new Array();
        $(function () {
            $('#empGroup[value^=selected]').on("click", function () {
                $('#mdlSelectEmp').modal('show');
                loadSearch();
                $("#opts :input").attr("disabled", true);
            });
            $('#empGroup[value^=all]').on("click", function () {
                selected = new Array();
                $("#opts :input").attr("disabled", false);
            });
            oTable = $('#empSearch').dataTable({
                "bProcessing": true,
                "bServerSide": true,
                "bLengthChange": false,
                "iDisplayLength": 30,
                "sServerMethod": "POST",
                "sPaginationType": "full_numbers",
                "sDom": 'T<"clear">lfrtip',
                "oTableTools": { "sRowSelect": "multi" },
                "sAjaxSource": '@Url.Action("GetEmployees")',
                "aoColumns": [{ "sName": "Employee Id" }, { "sName": "Name" }, { "sName": "Department" }, { "sName": "Mobile" }],
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": '@Url.Action("GetEmployees")',
                        "data": aoData,
                        "success": fnCallback
                    });
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    $('#empSearch tbody > tr').each(function () {
                        if (jQuery.inArray(aData[0], selected) != -1) {
                            $(this).addClass('row_selected');
                        }
                    });
                    return nRow;
                },
                "fnDrawCallback": function (oSettings) {
                    $('#empSearch tbody > tr').each(function () {
                        var iPos = oTable.fnGetPosition(this);
                        if (iPos != null) {
                            var aData = oTable.fnGetData(iPos);
                            if (jQuery.inArray(aData[0], selected) != -1)
                                $(this).addClass('row_selected');
                        }
                        $(this).click(function () {
                            iPos = oTable.fnGetPosition(this);
                            aData = oTable.fnGetData(iPos);
                            var iId = aData[0];
                            var is_in_array = jQuery.inArray(iId, selected);
                            if (is_in_array == -1) {
                                selected[selected.length] = iId;
                            } else {
                                selected = jQuery.grep(selected, function (value) {
                                    return value != iId;
                                });
                            }
                            if ($(this).hasClass('row_selected')) {
                                $(this).removeClass('row_selected');
                            } else {
                                $(this).addClass('row_selected');
                            }
                        });
                    });
                }
            });

            $('#SalaryProcessDate,#SalaryPaymentDate').datepicker({ dateFormat: 'yy-mm-dd' });
            $('#Year').change(function () { chMonthYear(); });
            $('#Month').change(function () { chMonthYear(); });
            
        });

        function chMonthYear() {
            var dnf = $('<form>', {
                "id": "dtmonyr",
                "html": '<input type="text" id="year"  name="year" value="' + $('#Year').val() + '" /> <input type="text" id="month"  name="month" value="' + $('#Month').val() + '" /> '
            });
            // prepareForm();
            $.post('@Url.Action("GetDateByMonthYear")', dnf.serialize(), function (rdt) {
                    if (rdt.nd != "") {
                        var nowTemp = new Date(Date.parse(rdt.nd));
                        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

                        $('#SalaryProcessDate').datepicker({ dateFormat: 'yy-mm-dd' });
                        $('#SalaryPaymentDate').datepicker({ dateFormat: 'yy-mm-dd' });

                        $('#SalaryProcessDate').datepicker('setValue', now);
                        $('#SalaryPaymentDate').datepicker('setValue', now);
                    }
                });
                prepareForm();
            }
            function loadSearch() {
                oTable.fnDraw();
            }
            function prepareForm() {
                var $frm = $('#mf');
                if ($frm != null && $frm != "undefined") {
                    $frm.unbind();
                    $frm.data('validator', null);
                    $.validator.unobtrusive.parse(document);
                }
            }

            function ShowBusy() {
                $('#prel').show();
                $('#btnUndoProcess').text('Processing. Please wait...');
                $('#btnUndoProcess').attr("disabled", "disabled");
            }
            function HideBusy() {
                $('#prel').hide();
                $('#btnUndoProcess').text('Process');
                $('#btnUndoProcess').removeAttr("disabled");
            }

            function UndoSalaryProcess(el) {
                $('#prcsSalary').modal('show');
                $('#btnPrcsBonus').click(function () {
                    $('#prcsSalary').modal('hide');
                    var test = $(el).attr('href');
                    document.forms[0].submit();
                });
            }
    </script>

}

