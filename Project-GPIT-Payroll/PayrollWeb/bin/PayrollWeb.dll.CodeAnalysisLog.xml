<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Targets>
  <Target Name="D:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\bin\PayrollWeb.dll">
   <Modules>
    <Module Name="payrollweb.dll">
     <Namespaces>
      <Namespace Name="PayrollWeb.ReportDataSet">
       <Types>
        <Type Name="ReportDataSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReportDataSet'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ReportDataSet+tblBankAdviceDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReportDataSet.tblBankAdviceDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ReportDataSet+tblPaySlipDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReportDataSet.tblPaySlipDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ReportDataSet+tblSalarySheetDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReportDataSet.tblSalarySheetDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PayrollWeb.Service">
       <Types>
        <Type Name="AllowanceService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeleteEmployeeChildAllowance(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="AllowanceService.cs" Line="570">'AllowanceService.DeleteEmployeeChildAllowance(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IncomeTaxService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#process_monthly_incomeTax(System.Collections.Generic.List`1&lt;com.gpit.Model.prl_employee&gt;,System.String,System.DateTime,System.DateTime,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="IncomeTaxService.cs" Line="680">'IncomeTaxService.process_monthly_incomeTax(List&lt;prl_employee&gt;, string, DateTime, DateTime, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SalaryService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeleteEmployeeTaxDetail(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="605">'SalaryService.DeleteEmployeeTaxDetail(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteEmployeeTaxProcess(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="587">'SalaryService.DeleteEmployeeTaxProcess(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteEmployeeTaxSlab(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="625">'SalaryService.DeleteEmployeeTaxSlab(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteSalaryAllowance(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="643">'SalaryService.DeleteSalaryAllowance(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteSalaryDeduction(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="661">'SalaryService.DeleteSalaryDeduction(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteSalaryDetail(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="679">'SalaryService.DeleteSalaryDetail(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteSalaryMaster(System.Int32,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="697">'SalaryService.DeleteSalaryMaster(int, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSalaryReview(System.Int32,System.Int32,System.String,System.DateTime,MySql.Data.MySqlClient.MySqlCommand)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\Service" File="SalaryService.cs" Line="721">'SalaryService.UpdateSalaryReview(int, int, string, DateTime, MySqlCommand)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PayrollWeb.ViewModels">
       <Types>
        <Type Name="BonusProcess" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_bonus_name(BonusName):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_company(Company):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_department(Department):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_division(Division):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_fiscal_year(FiscalYr):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_grade(Grade):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="BonusProcess.cs" Line="14">'BonusProcess.BonusProcess()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;BonusProcess..ctor()&#xD;&#xA;BonusProcess.set_prl_religion(Religion):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LeaveWithoutPaySetting" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="LeaveWithoutPaySetting.cs" Line="13">'LeaveWithoutPaySetting.LeaveWithoutPaySetting()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;LeaveWithoutPaySetting..ctor()&#xD;&#xA;LeaveWithoutPaySetting.set_prl_employee_leave_without_pay(ICollection&lt;EmployeeLeaveWithoutPay&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Overtime" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-11-22 12:38:15Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\Home\Official\Project-GPIT-Payroll\Project-GPIT-Payroll\PayrollWeb\ViewModels" File="Overtime.cs" Line="10">'Overtime.Overtime()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Overtime..ctor()&#xD;&#xA;Overtime.set_prl_over_time_configuration(ICollection&lt;OTConfiguration&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
