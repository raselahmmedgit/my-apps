@using System.Activities.Statements
@using SoftwareGrid.Model.iTestApp.Utility
@model SoftwareGrid.Model.iTestApp.TestManagement.TestTaken
@{
    ViewBag.Title = "Test Result";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isAuthorize = true;
    var user = WebHelper.CurrentSession.Content.LoggedInUser;
    if (Model != null)
    {
        if (user.UserId != Model.UserId)
        {
            if (user.UserType != (int)AppUsers.Admin)
            {
                isAuthorize = false;
            }

        }
    }

}
@if (Model != null && isAuthorize)
{
    <div class="container">
        <div class="data-content">
            <div class="col-md-12">
                <div class="portlet-box">
                    <div class="portlet-body">
                        <div class="quiz-test">
                            <h3 class="test-title">@Model.Test.TestName</h3>
                            <!-- <div class="text-right settime">Time Remaining: <span id="timer">00</span></div> -->
                            <div class="row">
                                <div class="col-sm-12">
                                    <span class="questions">Total Questions: <b>@Model.Test.NoOfQuestion</b></span>
                                    <span class="duration">Total Duration: <b>@Model.Test.Duration minutes</b></span>
                                </div>
                                <!-- <div class="col-sm-12 text-right">
                                    <a href="" class="btn btn-success btn-sm"> Submit Quiz </a>
                                </div> -->
                            </div>
                        </div>
                        <div class="exam-result">
                            <span class="ex-start">Exam Start Time:  <b>@MiscUtility.GetLocalDateTimeFromUtc(Convert.ToDateTime(Model.StartTime)).ToString("dd-MMM-yyyy hh:mm:ss tt")</b></span>
                            
                            <span class="ex-end">Exam End Time:  <b>
                                                                     @if (Model.EndTime != null)
                                                                     {
                                                                        @MiscUtility.GetLocalDateTimeFromUtc(Convert.ToDateTime(Model.EndTime)).ToString("dd-MMM-yyyy hh:mm:ss tt")
                                                                     }
                                                                    
                                                                 </b></span>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="app-dash-stats-section">
                                <a href="" class="col-md-3 app-dash-stats blue">
                                    <span>
                                        <span class="counter">@Model.Test.NoOfQuestion</span>
                                    </span>
                                    <h4>Total Question</h4>
                                </a>
                                
                                <a href="" class="col-md-3 app-dash-stats purple">
                                    <span>
                                        <span class="counter">@Model.TestTakenDetails.GroupBy(a => a.QuestionId).Count()</span>
                                    </span>
                                    <h4>Answered</h4>
                                </a>

                                <a href="" class="col-md-3 app-dash-stats green">
                                    <span>
                                        <span class="counter">@Model.TestTakenDetails.Where(a => a.IsCorrectAnswer).GroupBy(a => a.QuestionId).Count()</span>
                                    </span>
                                    <h4>Right Answered</h4>
                                </a>
                                <a href="" class="col-md-3 app-dash-stats red">
                                    <span>
                                        <span class="counter">@(Model.TestTakenDetails.GroupBy(a => a.QuestionId).Count() - Model.TestTakenDetails.Where(a => a.IsCorrectAnswer).GroupBy(a => a.QuestionId).Count())</span>
                                    </span>
                                    <h4>Wrong Answered</h4>
                                </a>
                            </div>
                            <div class="col-md-12 text-center overall-score">
                                <h4>Earned Score <span class="failed">@Convert.ToDecimal(Model.Score).ToString("F0") %</span></h4>
                                <div class="progress progress-striped active">
                                    <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@Model.Score.ToString()" aria-valuemin="0" aria-valuemax="100" style="width: @Model.Score.ToString()%">
                                    </div>
                                </div>
                            </div>
                            <div class="text-center">
                                @*<a href="" class="btn btn-success">Start Again</a>*@
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
}
else
{
    <div class="container">
        <div class="data-content">
        </div>
    </div>
}


